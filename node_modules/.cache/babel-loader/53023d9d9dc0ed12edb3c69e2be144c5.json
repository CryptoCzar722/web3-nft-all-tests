{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Web3Provider } from '@ethersproject/providers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nexport function getInjectedProvider(_x) {\n  return _getInjectedProvider.apply(this, arguments);\n}\n\nfunction _getInjectedProvider() {\n  _getInjectedProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pollingInterval) {\n    var injectedProvider, provider;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return detectEthereumProvider();\n\n          case 2:\n            injectedProvider = _context.sent;\n\n            if (injectedProvider) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", undefined);\n\n          case 5:\n            provider = new Web3Provider(injectedProvider, 'any');\n            provider.pollingInterval = pollingInterval;\n            return _context.abrupt(\"return\", provider);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getInjectedProvider.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}