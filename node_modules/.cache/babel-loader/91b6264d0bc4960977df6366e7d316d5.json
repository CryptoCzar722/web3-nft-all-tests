{"ast":null,"code":"var querystring = require('querystring');\n\nmodule.exports = function (getRequest, apiKey) {\n  return {\n    /**\n     * Returns the amount of Tokens a specific account owns.\n     * @param {string} address - Contract address\n     * @param {string} tokenname - Name of the token\n     * @param {string} contractaddress - Contract address\n     * @example\n     *     var supply = api.account.tokenbalance(\n     *       '0x4366ddc115d8cf213c564da36e64c8ebaa30cdbd',\n     *       '',\n     *       '0xe0b7927c4af23765cb51314a0e0521a9645f0e2a' // DGD contract address\n     * );\n     * @returns {Promise.<object>}\n     */\n    tokenbalance: function tokenbalance(address, tokenname, contractaddress) {\n      var module = 'account';\n      var action = 'tokenbalance';\n      var tag = 'latest';\n      var queryObject = {\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        tag: tag\n      };\n\n      if (contractaddress) {\n        queryObject.contractaddress = contractaddress;\n      }\n\n      if (tokenname) {\n        queryObject.tokenname = tokenname;\n      }\n\n      if (address) {\n        queryObject.address = address;\n      }\n\n      var query = querystring.stringify(queryObject);\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the balance of a sepcific account\n     * @param {string} address - Address\n     * @example\n     * var balance = api.account.balance('0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae');\n     * @returns {Promise.<object>}\n     */\n    balance: function balance(address) {\n      var module = 'account';\n      var action = 'balance';\n      var tag = 'latest';\n\n      if (typeof address !== 'string' && address && address.length) {\n        address = address.join(',');\n        action = 'balancemulti';\n      }\n\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        tag: tag,\n        address: address,\n        apiKey: apiKey\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Get a list of internal transactions\n     * @param {string} txhash - Transaction hash. If specified then address will be ignored\n     * @param {string} address - Transaction address\n     * @param {string} startblock - start looking here\n     * @param {string} endblock - end looking there\n     * @param {string} sort - Sort asc/desc\n     * @example\n     * var txlist = api.account.txlistinternal('0x40eb908387324f2b575b4879cd9d7188f69c8fc9d87c901b9e2daaea4b442170');\n     * @returns {Promise.<object>}\n     */\n    txlistinternal: function txlistinternal(txhash, address, startblock, endblock, sort) {\n      var module = 'account';\n      var action = 'txlistinternal';\n      var queryObject = {\n        module: module,\n        action: action,\n        apiKey: apiKey\n      };\n\n      if (!startblock) {\n        startblock = 0;\n      }\n\n      queryObject.startblock = startblock;\n\n      if (!endblock) {\n        endblock = 'latest';\n      }\n\n      queryObject.endblock = endblock;\n\n      if (!sort) {\n        sort = 'asc';\n      }\n\n      queryObject.sort = sort;\n\n      if (txhash) {\n        queryObject.txhash = txhash;\n      } else {\n        queryObject.address = address;\n      }\n\n      queryObject.txhash = txhash;\n      return getRequest(querystring.stringify(queryObject));\n    },\n\n    /**\n     * Get a list of transactions for a specfic address\n     * @param {string} address - Transaction address\n     * @param {string} startblock - start looking here\n     * @param {string} endblock - end looking there\n     * @param {number} page - Page number\n     * @param {number} offset - Max records to return\n     * @param {string} sort - Sort asc/desc\n     * @example\n     * var txlist = api.account.txlist('0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae', 1, 'latest', 1, 100, 'asc');\n     * @returns {Promise.<object>}\n     */\n    txlist: function txlist(address, startblock, endblock, page, offset, sort) {\n      var module = 'account';\n      var action = 'txlist';\n\n      if (!startblock) {\n        startblock = 0;\n      }\n\n      if (!endblock) {\n        endblock = 'latest';\n      }\n\n      if (!page) {\n        page = 1;\n      }\n\n      if (!offset) {\n        offset = 100;\n      }\n\n      if (!sort) {\n        sort = 'asc';\n      }\n\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        startblock: startblock,\n        endblock: endblock,\n        page: page,\n        offset: offset,\n        sort: sort,\n        address: address,\n        apiKey: apiKey\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Get a list of blocks that a specific account has mineds\n     * @example\n     * var txlist = api.account.getminedblocks('0x9dd134d14d1e65f84b706d6f205cd5b1cd03a46b');\n     * @param {string} address - Transaction hash\n     */\n    getminedblocks: function getminedblocks(address) {\n      var module = 'account';\n      var action = 'getminedblocks';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        address: address,\n        apiKey: apiKey\n      });\n      return getRequest(query);\n    },\n\n    /**\n    * [BETA] Get a list of \"ERC20 - Token Transfer Events\" by Address\n    * @param {string} address - Account address\n    * @param {string} startblock - start looking here\n    * @param {string} endblock - end looking there\n     * @param {number} page - Page number\n     * @param {number} offset - Max records to return\n     * @param {string} sort - Sort asc/desc\n    * @param {string} contractaddress - Address of ERC20 token contract (if not specified lists transfers for all tokens)\n    * @example\n    * var txlist = api.account.tokentx('0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae', '0x5F988D968cb76c34C87e6924Cc1Ef1dCd4dE75da', 1, 'latest', 'asc');\n    * @returns {Promise.<object>}\n    */\n    tokentx: function tokentx(address, contractaddress, startblock, endblock, page, offset, sort) {\n      var module = 'account';\n      var action = 'tokentx';\n\n      if (!startblock) {\n        startblock = 0;\n      }\n\n      if (!endblock) {\n        endblock = 'latest';\n      }\n\n      if (!page) {\n        page = 1;\n      }\n\n      if (!offset) {\n        offset = 100;\n      }\n\n      if (!sort) {\n        sort = 'asc';\n      }\n\n      var queryObject = {\n        module: module,\n        action: action,\n        startblock: startblock,\n        endblock: endblock,\n        page: page,\n        offset: offset,\n        sort: sort,\n        address: address,\n        apiKey: apiKey\n      };\n\n      if (contractaddress) {\n        queryObject.contractaddress = contractaddress;\n      }\n\n      return getRequest(querystring.stringify(queryObject));\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}