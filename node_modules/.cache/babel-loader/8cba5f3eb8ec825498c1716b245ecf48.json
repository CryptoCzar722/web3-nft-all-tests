{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/Documents/Work/SIBM-Test/src/components/NFTForm.js\";\nimport React, { Component } from 'react'; //import { useState } from 'react'\n\nimport './App.css';\nimport Switch from 'react-ios-switch';\nimport FormData from 'form-data';\n\nvar fs = require('fs'); //import Identicon from 'identicon.js';\n//var QRCode = require('qrcode.react');\n//Exhange contract v0\n//0x8B68984546d5BE5089eBf791533a10267df8D107\n//exchange contract v0.1\n//0x26a0f03E7A43C1cd77029e0B902DcBfFB5e1E9Fa\n//0x26a0f03E7A43C1cd77029e0B902DcBfFB5e1E9Fa\n\n\nvar pinataSDK = require('@pinata/sdk');\n\nvar pinata = pinataSDK('0f3f630bec73946940bd', 'c59ada21cf8e2eac1d19b2eb7177ff6d5d95f4c6a2b962a6d74959c3a7b132e9');\n\nvar axios = require('axios');\n\nvar userApiKey = \"0f3f630bec73946940bd\";\nvar userApiSecret = \"c59ada21cf8e2eac1d19b2eb7177ff6d5d95f4c6a2b962a6d74959c3a7b132e9\"; //ADD QR code.\n//Reveal nfts in marketplace\n\n/*\n </div>\n\n              <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}><p>Minting Coming Soon! Click image to unblur </p>\n            </div> \n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n            { this.props.account\n              ? <img\n                className=\"ml-2\"\n                width='350'\n                height='350'\n                src= {`data:image/png;base64,${new Identicon(this.props.account, 200).toString()}`}\n                alt=\"\"\n                onClick = {this.reveal}\n                style={this.state.revealImg ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}}\n              />\n              : <span></span>\n            }\n            \n            { this.props.account\n              ? <QRCode  onClick = {this.reveal2} style={this.state.revealImg2 ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}} size = '175' value= {this.props.account}  /> \n              : <span></span>\n            }\n\n*/\n\nvar NFTForm = /*#__PURE__*/function (_Component) {\n  _inherits(NFTForm, _Component);\n\n  function NFTForm(props) {\n    var _this;\n\n    _classCallCheck(this, NFTForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NFTForm).call(this, props));\n\n    _this.onImageChange = function (event) {\n      if (event.target.files && event.target.files[0]) {\n        var img = event.target.files[0];\n        console.log(\"IMG - \", img.name);\n\n        _this.setState({\n          imageName: img.name\n        });\n\n        console.log(\"File location \", './' + img.name); //this.state.setFile) \n\n        _this.setState({\n          setFile: './' + img.name\n        });\n\n        var data = new FormData();\n        data.append('file', fs.createReadStream(_this.state.setFile));\n\n        _this.setState({\n          image: URL.createObjectURL(img)\n        });\n\n        console.log(\"image - \", _this.state.image);\n      }\n    };\n\n    _this.state = {\n      seconds: 0,\n      imgBuffer: \"\",\n      revealImg: false,\n      revealImg2: false,\n      image: null,\n      imageName: null,\n      mint_market: true,\n      pinataConnection: false,\n      file: \"\",\n      setFile: \"\",\n      myipfsHash: \"\",\n      setIPFSHASH: \"\"\n    }; //localStorage.getItem(\"Timer\")  };\n    //this.onImageChange = this.onImageChange.bind(this);\n    //this.handleFile = this.handleFile.bind(this);\n\n    return _this;\n  }\n\n  _createClass(NFTForm, [{\n    key: \"reveal\",\n    value: function reveal() {\n      var _this2 = this;\n\n      //this.setState({revealImg : !this.state.revealImg});\n      this.setState(function (state) {\n        return {\n          revealImg: !_this2.state.revealImg\n        };\n      });\n    }\n  }, {\n    key: \"reveal2\",\n    value: function reveal2() {\n      var _this3 = this;\n\n      //this.setState({revealImg : !this.state.revealImg});\n      this.setState(function (state) {\n        return {\n          revealImg2: !_this3.state.revealImg2\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      //localStorage.setItem('Timer', 0)\n      //this.interval = setInterval(() => this.tick(), 1000);\n      this.reveal = this.reveal.bind(this);\n      this.reveal2 = this.reveal2.bind(this);\n      pinata.testAuthentication().then(function (result) {\n        //handle successful authentication here\n        console.log(result);\n\n        _this4.setState({\n          pinataConnection: true\n        });\n      }).catch(function (err) {\n        //handle error here\n        console.log(err);\n\n        _this4.setState({\n          pinataConnection: false\n        });\n      }); //this.reveal = setInterval(() => this.tick(), 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"handleFile\",\n    value: function () {\n      var _handleFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var fileToHandle, formData, url, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"image - \", this.state.image);\n                console.log('starting');\n                fileToHandle = this.state.setFile; // initialize the form data\n\n                formData = new FormData(); // append the file form data to \n\n                formData.append(\"file\", this.state.image); // call the keys from .env    \n                // the endpoint needed to upload the file\n\n                url = 'https://api.pinata.cloud/pinning/pinFileToIPFS';\n                _context.next = 8;\n                return axios.post(url, formData, {\n                  maxContentLength: \"Infinity\",\n                  headers: {\n                    \"Content-Type\": \"multipart/form-data;boundary=\".concat(formData._boundary),\n                    'pinata_api_key': userApiKey,\n                    'pinata_secret_api_key': userApiSecret\n                  }\n                });\n\n              case 8:\n                response = _context.sent;\n                console.log(response); // get the hash\n                //setIPFSHASH(response.data.IpfsHash)\n\n                this.setState({\n                  setIPFSHASH: response.data.IpfsHash\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleFile() {\n        return _handleFile.apply(this, arguments);\n      }\n\n      return handleFile;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: \"mb-0\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault(); //let ipfs = pinata.pinFileToIPFS(this.state.imageName)//, options)\n          //console.log(\"ipfs pin \", ipfs);\n          //this.state.IpfsPostImg();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.mint_market,\n        onChange: function onChange(checked) {\n          _this5.setState({\n            mint_market: !_this5.state.mint_market\n          });\n        },\n        offColor: \"yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 14\n        }\n      }, this.state.mint_market ? /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, \"NFT Minting\") : /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, \"NFT MarketPlace Coming Soon\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"font\", {\n        color: !this.state.pinataConnection ? \"red\" : \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 22\n        }\n      }, this.state.pinataConnection, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        height: \"250\",\n        width: \"250\",\n        src: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"myImage\",\n        onChange: this.onImageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleFile\n        /*type=\"submit\"*/\n        ,\n        name: \"btn\",\n        className: \"btn btn-primary btn-block btn-lg\",\n        style: {\n          maxWidth: '325px',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, \" Mint Your Image\")));\n    }\n  }]);\n\n  return NFTForm;\n}(Component);\n\nexport default NFTForm;","map":{"version":3,"sources":["/Users/andrew/Documents/Work/SIBM-Test/src/components/NFTForm.js"],"names":["React","Component","Switch","FormData","fs","require","pinataSDK","pinata","axios","userApiKey","userApiSecret","NFTForm","props","onImageChange","event","target","files","img","console","log","name","setState","imageName","setFile","data","append","createReadStream","state","image","URL","createObjectURL","seconds","imgBuffer","revealImg","revealImg2","mint_market","pinataConnection","file","myipfsHash","setIPFSHASH","reveal","bind","reveal2","testAuthentication","then","result","catch","err","clearInterval","interval","fileToHandle","formData","url","post","maxContentLength","headers","_boundary","response","IpfsHash","preventDefault","display","justifyContent","alignItems","checked","handleFile","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//import { useState } from 'react'\nimport './App.css'\nimport Switch from 'react-ios-switch';\nimport FormData from 'form-data';\nconst fs = require('fs');\n\n//import Identicon from 'identicon.js';\n//var QRCode = require('qrcode.react');\n\n//Exhange contract v0\n//0x8B68984546d5BE5089eBf791533a10267df8D107\n//exchange contract v0.1\n//0x26a0f03E7A43C1cd77029e0B902DcBfFB5e1E9Fa\n//0x26a0f03E7A43C1cd77029e0B902DcBfFB5e1E9Fa\n\nconst pinataSDK = require('@pinata/sdk');\nconst pinata = pinataSDK('0f3f630bec73946940bd', 'c59ada21cf8e2eac1d19b2eb7177ff6d5d95f4c6a2b962a6d74959c3a7b132e9');\n\nconst axios = require('axios');\nconst userApiKey = `0f3f630bec73946940bd`;\nconst userApiSecret = `c59ada21cf8e2eac1d19b2eb7177ff6d5d95f4c6a2b962a6d74959c3a7b132e9`;\n\n//ADD QR code.\n\n//Reveal nfts in marketplace\n/*\n </div>\n\n              <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}><p>Minting Coming Soon! Click image to unblur </p>\n            </div> \n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n            { this.props.account\n              ? <img\n                className=\"ml-2\"\n                width='350'\n                height='350'\n                src= {`data:image/png;base64,${new Identicon(this.props.account, 200).toString()}`}\n                alt=\"\"\n                onClick = {this.reveal}\n                style={this.state.revealImg ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}}\n              />\n              : <span></span>\n            }\n            \n            { this.props.account\n              ? <QRCode  onClick = {this.reveal2} style={this.state.revealImg2 ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}} size = '175' value= {this.props.account}  /> \n              : <span></span>\n            }\n\n*/\n\n\nclass NFTForm extends Component {\n        \n        constructor(props) {\n          super(props);\n          this.state = { \n            seconds : 0,\n            imgBuffer : \"\",\n            revealImg: false,\n            revealImg2: false,\n            image: null,\n            imageName: null,\n            mint_market : true,\n            pinataConnection : false,\n            file : \"\",\n            setFile : \"\",\n            myipfsHash : \"\", \n            setIPFSHASH : \"\"\n          };//localStorage.getItem(\"Timer\")  };\n          //this.onImageChange = this.onImageChange.bind(this);\n          //this.handleFile = this.handleFile.bind(this);\n        }\n        \n        reveal(){\n          //this.setState({revealImg : !this.state.revealImg});\n          this.setState(state => ({\n            revealImg: !this.state.revealImg\n        }));\n        }\n\n        reveal2(){\n          //this.setState({revealImg : !this.state.revealImg});\n          this.setState(state => ({\n            revealImg2: !this.state.revealImg2\n        }));\n        }\n      \n        componentDidMount() {\n          //localStorage.setItem('Timer', 0)\n          //this.interval = setInterval(() => this.tick(), 1000);\n          this.reveal = this.reveal.bind(this);\n          this.reveal2 = this.reveal2.bind(this);\n          pinata.testAuthentication().then((result) => {\n            //handle successful authentication here\n              console.log(result);\n              this.setState({pinataConnection : true});\n            }).catch((err) => {\n              //handle error here\n              console.log(err);\n              this.setState({pinataConnection : false});\n          });\n          \n          //this.reveal = setInterval(() => this.tick(), 0);\n        }\n      \n        componentWillUnmount() {\n          clearInterval(this.interval);\n        }\n\n        onImageChange = event => {\n          if (event.target.files && event.target.files[0]) {\n            let img = event.target.files[0];\n            console.log(\"IMG - \", img.name);\n            \n            this.setState({imageName : img.name})\n            \n            \n            console.log(\"File location \", './'+img.name)  //this.state.setFile) \n            this.setState({setFile : './'+img.name})\n            let data = new FormData();\n            data.append('file', fs.createReadStream(this.state.setFile));\n\n            this.setState({\n              image: URL.createObjectURL(img)\n            });\n            console.log(\"image - \", this.state.image);\n          }\n                     \n       };\n\n       async handleFile() {\n        console.log(\"image - \", this.state.image);\n        console.log('starting')\n        const fileToHandle = this.state.setFile;\n        // initialize the form data\n        const formData = new FormData()\n        // append the file form data to \n        formData.append(\"file\", this.state.image)\n        \n        // call the keys from .env    \n        // the endpoint needed to upload the file\n        const url =  'https://api.pinata.cloud/pinning/pinFileToIPFS'\n    \n        const response = await axios.post(\n          url,\n          formData,\n          {\n              maxContentLength: \"Infinity\",\n              headers:\n                  {\n                  \"Content-Type\": `multipart/form-data;boundary=${formData._boundary}`, \n                  'pinata_api_key': userApiKey,\n                  'pinata_secret_api_key': userApiSecret\n                  }\n          }\n        )\n      console.log(response)\n      // get the hash\n      //setIPFSHASH(response.data.IpfsHash)\n      this.setState({setIPFSHASH : response.data.IpfsHash});\n    }\n      \n        render() {\n          return (\n            <form className=\"mb-0\" onSubmit={(event) => {\n                event.preventDefault()                \n                //let ipfs = pinata.pinFileToIPFS(this.state.imageName)//, options)\n                //console.log(\"ipfs pin \", ipfs);\n                //this.state.IpfsPostImg();\n                \n                }}>\n\n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n              }}>\n              \n              <Switch\n                checked={this.state.mint_market}\n                onChange={checked => {this.setState({mint_market : !this.state.mint_market})}}\n                offColor=\"yellow\"\n              />\n              \n             </div>\n\n             <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n              {\n              this.state.mint_market\n              ?\n              <b>NFT Minting</b> :\n              <b>NFT MarketPlace Coming Soon</b>\n              }\n                </div>\n                <div style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n                  }}>\n                <h1> <font color={(!this.state.pinataConnection) ? \"red\" :\"green\"}>{this.state.pinataConnection} </font></h1> \n                 </div>\n            <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n            <img height=\"250\" width=\"250\" src={this.state.image} />\n            </div>\n\n            <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n            <input type=\"file\" name=\"myImage\" onChange={this.onImageChange} />\n            </div>\n\n            <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n            <button onClick={this.handleFile}/*type=\"submit\"*/ name=\"btn\" className=\"btn btn-primary btn-block btn-lg\" style={{ maxWidth: '325px', justifyContent:'center'}}> Mint Your Image</button>\n            \n            </div>\n            </form>\n          );\n        }\n      }\n      \n      export default NFTForm;\n  "]},"metadata":{},"sourceType":"module"}