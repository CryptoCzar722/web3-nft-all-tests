{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/Documents/Work/SIBM-Test/src/components/BridgeForm.js\";\nimport React, { Component } from 'react';\nimport tokenLogo from '../token-logo.png';\nimport ethLogo from '../eth-logo.png';\nimport bnbLogo from '../bnb-logo.png';\n\nvar BridgeForm = /*#__PURE__*/function (_Component) {\n  _inherits(BridgeForm, _Component);\n\n  function BridgeForm(props) {\n    var _this;\n\n    _classCallCheck(this, BridgeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BridgeForm).call(this, props)); //this.onSubmit = this.onSubmit.bind(this)\n\n    _this.state = {\n      output: '0',\n      imgsrc: bnbLogo,\n      tokensrc: ethLogo\n    };\n    return _this;\n  }\n\n  _createClass(BridgeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: \"mb-3\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var etherAmount;\n          etherAmount = _this2.input.value.toString();\n          window.confirm(\"Sell \" + etherAmount + ' ETH for DAI');\n          etherAmount = window.web3.utils.toWei(etherAmount, 'Ether');\n\n          _this2.props.buyTokens(etherAmount);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        name: \"Exchanges\",\n        id: \"Exchanges\",\n        ref: function ref(select) {\n          _this2.select = select;\n        },\n        onChange: function onChange(event) {\n          if (_this2.select.value === \"ETH\") {\n            _this2.setState({\n              imgsrc: ethLogo\n            });\n\n            _this2.setState({\n              tokensrc: bnbLogo\n            }); //this.setState({tokenCount : window.web3.utils.fromWei(this.props.ethBalance, 'Ether')})\n\n          } else if (_this2.select.value === \"BSC\") {\n            _this2.setState({\n              imgsrc: bnbLogo\n            });\n\n            _this2.setState({\n              tokensrc: ethLogo\n            }); //this.setState({imgsrc : tokenLogo});\n            //this.setState({tokenCount : window.web3.utils.fromWei(this.props.tokenBalance, 'Ether')})\n\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"BSC\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"Binance Smart Chain\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"ETH\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, \"Ethereum Mainnet\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }\n      }, \"Input\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Balance: \", this.props.ethBalance)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(event) {\n          var etherAmount = _this2.input.value.toString();\n\n          _this2.setState({\n            output: etherAmount * _this2.props.bnbPrice\n          });\n        },\n        ref: function ref(input) {\n          _this2.input = input;\n        },\n        className: \"form-control form-control-lg\",\n        placeholder: \"0\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.imgsrc,\n        height: \"32\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }), \"\\xA0\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }\n      }, \"Output\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"Balance: \", this.props.bnbBalance)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        placeholder: \"0\",\n        value: this.state.output,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.tokensrc,\n        height: \"32\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }), \"\\xA0 Token\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \"Exchange Rate\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, \"1 BNB = \", this.props.ethPrice, \" DAI \")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block btn-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, \"Buy Tokens \"));\n    }\n  }]);\n\n  return BridgeForm;\n}(Component);\n\nexport default BridgeForm;","map":{"version":3,"sources":["/Users/andrew/Documents/Work/SIBM-Test/src/components/BridgeForm.js"],"names":["React","Component","tokenLogo","ethLogo","bnbLogo","BridgeForm","props","state","output","imgsrc","tokensrc","event","preventDefault","etherAmount","input","value","toString","window","confirm","web3","utils","toWei","buyTokens","select","setState","ethBalance","bnbPrice","bnbBalance","ethPrice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport tokenLogo from '../token-logo.png'\nimport ethLogo from '../eth-logo.png'\nimport bnbLogo from '../bnb-logo.png'\n\nclass BridgeForm extends Component {\n  constructor(props) {\n    super(props)\n    //this.onSubmit = this.onSubmit.bind(this)\n    this.state = {\n      output: '0',\n      imgsrc : bnbLogo,\n      tokensrc : ethLogo\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"mb-3\" onSubmit={(event) => {\n          event.preventDefault()\n          let etherAmount\n          etherAmount = this.input.value.toString()\n          window.confirm(\"Sell \" + etherAmount + ' ETH for DAI');\n          etherAmount = window.web3.utils.toWei(etherAmount, 'Ether')\n          \n          this.props.buyTokens(etherAmount)\n        }}>\n          <select name=\"Exchanges\" id=\"Exchanges\" ref={(select) => { this.select = select }} onChange ={ (event) => {\n                  if (this.select.value === \"ETH\"){\n                    this.setState({imgsrc : ethLogo});\n                    this.setState({tokensrc : bnbLogo});\n                    //this.setState({tokenCount : window.web3.utils.fromWei(this.props.ethBalance, 'Ether')})\n                  }else if (this.select.value  === \"BSC\"){\n                    this.setState({imgsrc : bnbLogo});\n                    this.setState({tokensrc : ethLogo});\n                    //this.setState({imgsrc : tokenLogo});\n                    //this.setState({tokenCount : window.web3.utils.fromWei(this.props.tokenBalance, 'Ether')})\n                  }\n\n              }}>\n                <option value=\"BSC\">Binance Smart Chain</option>\n                <option value=\"ETH\">Ethereum Mainnet</option>\n              </select>\n        <div>\n          <label className=\"float-left\"><b>Input</b></label>\n          <span className=\"float-right text-muted\">\n            Balance: {this.props.ethBalance}\n          </span>\n        </div>\n        <div className=\"input-group mb-4\">\n          <input\n            type=\"text\"\n            onChange={(event) => {\n              const etherAmount = this.input.value.toString()\n              this.setState({\n                output: etherAmount * this.props.bnbPrice\n              })\n            }}\n            ref={(input) => { this.input = input }}\n            className=\"form-control form-control-lg\"\n            placeholder=\"0\"\n            required />\n          <div className=\"input-group-append\">\n            <div className=\"input-group-text\">\n              <img src={this.state.imgsrc} height='32' alt=\"\"/>\n              &nbsp;&nbsp;&nbsp; \n            </div>\n          </div>\n        </div>\n        <div>\n          <label className=\"float-left\"><b>Output</b></label>\n          <span className=\"float-right text-muted\">\n            Balance: {this.props.bnbBalance}\n          </span>\n        </div>\n        <div className=\"input-group mb-2\">\n          <input\n            type=\"text\"\n            className=\"form-control form-control-lg\"\n            placeholder=\"0\"\n            value={this.state.output}\n            disabled\n          />\n          <div className=\"input-group-append\">\n            <div className=\"input-group-text\">\n              <img src={this.state.tokensrc} height='32' alt=\"\"/>\n              &nbsp; Token\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-5\">\n          <span className=\"float-left text-muted\">Exchange Rate</span>\n          <span className=\"float-right text-muted\">1 BNB = {this.props.ethPrice} DAI </span>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Buy Tokens </button>\n      </form>\n    );\n  }\n}\n\nexport default BridgeForm;\n"]},"metadata":{},"sourceType":"module"}