{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/andrew/Documents/Work/SIBM-Test/src/components/NFTForm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Switch from 'react-ios-switch';\nimport Identicon from 'identicon.js';\n\nvar QRCode = require('qrcode.react');\n\nvar pinataSDK = require('@pinata/sdk');\n\nvar pinata = pinataSDK('0f3f630bec73946940bd', 'c59ada21cf8e2eac1d19b2eb7177ff6d5d95f4c6a2b962a6d74959c3a7b132e9'); //ADD QR code.\n//Reveal nfts in marketplace\n\n/*\n </div>\n\n              <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}><p>Minting Coming Soon! Click image to unblur </p>\n            </div> \n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n            { this.props.account\n              ? <img\n                className=\"ml-2\"\n                width='350'\n                height='350'\n                src= {`data:image/png;base64,${new Identicon(this.props.account, 200).toString()}`}\n                alt=\"\"\n                onClick = {this.reveal}\n                style={this.state.revealImg ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}}\n              />\n              : <span></span>\n            }\n            \n            { this.props.account\n              ? <QRCode  onClick = {this.reveal2} style={this.state.revealImg2 ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}} size = '175' value= {this.props.account}  /> \n              : <span></span>\n            }\n\n*/\n\nvar NFTForm = /*#__PURE__*/function (_Component) {\n  _inherits(NFTForm, _Component);\n\n  function NFTForm(props) {\n    var _this;\n\n    _classCallCheck(this, NFTForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NFTForm).call(this, props));\n\n    _this.onImageChange = function (event) {\n      if (event.target.files && event.target.files[0]) {\n        var img = event.target.files[0];\n\n        _this.setState({\n          image: URL.createObjectURL(img)\n        });\n      }\n    };\n\n    _this.state = {\n      seconds: 0,\n      revealImg: false,\n      revealImg2: false,\n      image: null,\n      mint_market: true,\n      pinataConnection: false\n    }; //localStorage.getItem(\"Timer\")  };\n\n    _this.onImageChange = _this.onImageChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NFTForm, [{\n    key: \"tick\",\n    value: function tick() {\n      localStorage.setItem('Timer', 0); //console.log('time tick ',parseInt(localStorage.getItem(\"Timer\").toString()))\n\n      if (parseInt(localStorage.getItem(\"Timer\"), 10) > 0) {\n        this.setState(function (state) {\n          return {\n            seconds: localStorage.getItem(\"Timer\").toString() + 1\n          };\n        }); //localStorage.setItem('Timer', this.state.seconds)\n        //this.props.SetTimer(this.state.seconds)\n      } else {\n        this.setState(function (state) {\n          return {\n            seconds: state.seconds + 1\n          };\n        }); //localStorage.setItem('Timer', this.state.seconds)\n        //this.props.SetTimer(this.state.seconds)\n      }\n\n      localStorage.setItem('Timer', this.state.seconds);\n    }\n  }, {\n    key: \"reveal\",\n    value: function reveal() {\n      var _this2 = this;\n\n      //this.setState({revealImg : !this.state.revealImg});\n      this.setState(function (state) {\n        return {\n          revealImg: !_this2.state.revealImg\n        };\n      });\n    }\n  }, {\n    key: \"reveal2\",\n    value: function reveal2() {\n      var _this3 = this;\n\n      //this.setState({revealImg : !this.state.revealImg});\n      this.setState(function (state) {\n        return {\n          revealImg2: !_this3.state.revealImg2\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      //localStorage.setItem('Timer', 0)\n      this.interval = setInterval(function () {\n        return _this4.tick();\n      }, 1000);\n      this.reveal = this.reveal.bind(this);\n      this.reveal2 = this.reveal2.bind(this);\n      pinata.testAuthentication().then(function (result) {\n        //handle successful authentication here\n        console.log(result);\n\n        _this4.setState({\n          pinataConnection: true\n        });\n      }).catch(function (err) {\n        //handle error here\n        console.log(err);\n\n        _this4.setState({\n          pinataConnection: false\n        });\n      }); //this.reveal = setInterval(() => this.tick(), 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: \"mb-0\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault(); //let ipfs = pinata.pinFileToIPFS(this.state.image)//, options)\n          //console.log(\"ipfs \", ipfs);\n\n          fetch(_this5.state.image) // Retrieve its body as ReadableStream\n          .then(function (response) {\n            return response.body;\n          }).then(function (body) {\n            var reader = body.getReader();\n            console.log(reader); // ...\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.mint_market,\n        onChange: function onChange(checked) {\n          _this5.setState({\n            mint_market: !_this5.state.mint_market\n          });\n        },\n        offColor: \"yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 14\n        }\n      }, this.state.mint_market ? /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, \"NFT Minting\") : /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, \"NFT MarketPlace Coming Soon\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"font\", {\n        color: !this.state.pinataConnection ? \"red\" : \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 22\n        }\n      }, this.state.pinataConnection, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        height: \"250\",\n        width: \"250\",\n        src: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"myImage\",\n        onChange: this.onImageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        name: \"btn\",\n        value: \"Sniper\",\n        className: \"btn btn-primary btn-block btn-lg\",\n        style: {\n          maxWidth: '325px',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, \" Mint Your Image\")));\n    }\n  }]);\n\n  return NFTForm;\n}(Component);\n\nexport default NFTForm;","map":{"version":3,"sources":["/Users/andrew/Documents/Work/SIBM-Test/src/components/NFTForm.js"],"names":["React","Component","Switch","Identicon","QRCode","require","pinataSDK","pinata","NFTForm","props","onImageChange","event","target","files","img","setState","image","URL","createObjectURL","state","seconds","revealImg","revealImg2","mint_market","pinataConnection","bind","localStorage","setItem","parseInt","getItem","toString","interval","setInterval","tick","reveal","reveal2","testAuthentication","then","result","console","log","catch","err","clearInterval","preventDefault","fetch","response","body","reader","getReader","display","justifyContent","alignItems","checked","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\n\nimport Switch from 'react-ios-switch';\n\nimport Identicon from 'identicon.js';\nvar QRCode = require('qrcode.react');\n\nconst pinataSDK = require('@pinata/sdk');\nconst pinata = pinataSDK('0f3f630bec73946940bd', 'c59ada21cf8e2eac1d19b2eb7177ff6d5d95f4c6a2b962a6d74959c3a7b132e9');\n\n//ADD QR code.\n\n//Reveal nfts in marketplace\n/*\n </div>\n\n              <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}><p>Minting Coming Soon! Click image to unblur </p>\n            </div> \n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n            { this.props.account\n              ? <img\n                className=\"ml-2\"\n                width='350'\n                height='350'\n                src= {`data:image/png;base64,${new Identicon(this.props.account, 200).toString()}`}\n                alt=\"\"\n                onClick = {this.reveal}\n                style={this.state.revealImg ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}}\n              />\n              : <span></span>\n            }\n            \n            { this.props.account\n              ? <QRCode  onClick = {this.reveal2} style={this.state.revealImg2 ? {filter: 'blur(0)' }:{filter: 'blur(4rem)'}} size = '175' value= {this.props.account}  /> \n              : <span></span>\n            }\n\n*/\n\n\nclass NFTForm extends Component {\n        \n        constructor(props) {\n          super(props);\n          this.state = { \n            seconds : 0,\n            revealImg: false,\n            revealImg2: false,\n            image: null,\n            mint_market : true,\n            pinataConnection : false\n          };//localStorage.getItem(\"Timer\")  };\n          this.onImageChange = this.onImageChange.bind(this);\n        }\n        \n        tick() {\n            localStorage.setItem('Timer', 0)\n            //console.log('time tick ',parseInt(localStorage.getItem(\"Timer\").toString()))\n        if (parseInt(localStorage.getItem(\"Timer\"),10) > 0 )\n            {\n            this.setState(state => ({\n                seconds: localStorage.getItem(\"Timer\").toString() + 1\n            }));\n            //localStorage.setItem('Timer', this.state.seconds)\n            //this.props.SetTimer(this.state.seconds)\n            }\n        else \n            {\n            this.setState(state => ({\n                seconds: state.seconds + 1\n            }));\n            //localStorage.setItem('Timer', this.state.seconds)\n            //this.props.SetTimer(this.state.seconds)\n            }\n            localStorage.setItem('Timer', this.state.seconds)\n        }\n        \n        reveal(){\n          //this.setState({revealImg : !this.state.revealImg});\n          this.setState(state => ({\n            revealImg: !this.state.revealImg\n        }));\n        }\n\n        reveal2(){\n          //this.setState({revealImg : !this.state.revealImg});\n          this.setState(state => ({\n            revealImg2: !this.state.revealImg2\n        }));\n        }\n      \n        componentDidMount() {\n          //localStorage.setItem('Timer', 0)\n          this.interval = setInterval(() => this.tick(), 1000);\n          this.reveal = this.reveal.bind(this);\n          this.reveal2 = this.reveal2.bind(this);\n          pinata.testAuthentication().then((result) => {\n            //handle successful authentication here\n              console.log(result);\n              this.setState({pinataConnection : true});\n            }).catch((err) => {\n              //handle error here\n              console.log(err);\n              this.setState({pinataConnection : false});\n          });\n          \n          //this.reveal = setInterval(() => this.tick(), 0);\n        }\n      \n        componentWillUnmount() {\n          clearInterval(this.interval);\n        }\n\n        onImageChange = event => {\n          if (event.target.files && event.target.files[0]) {\n            let img = event.target.files[0];\n            this.setState({\n              image: URL.createObjectURL(img)\n            });\n          }\n        };\n      \n        render() {\n          return (\n            <form className=\"mb-0\" onSubmit={(event) => {\n                event.preventDefault()\n                //let ipfs = pinata.pinFileToIPFS(this.state.image)//, options)\n                //console.log(\"ipfs \", ipfs);\n                fetch(this.state.image)\n                // Retrieve its body as ReadableStream\n                .then(response => response.body)\n                .then(body => {\n                  const reader = body.getReader();\n                  console.log(reader);\n                  // ...\n                  });\n                \n                }}>\n\n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n              }}>\n              \n              <Switch\n                checked={this.state.mint_market}\n                onChange={checked => {this.setState({mint_market : !this.state.mint_market})}}\n                offColor=\"yellow\"\n              />\n              \n             </div>\n\n             <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n              {\n              this.state.mint_market\n              ?\n              <b>NFT Minting</b> :\n              <b>NFT MarketPlace Coming Soon</b>\n              }\n                </div>\n                <div style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n                  }}>\n                <h1> <font color={(!this.state.pinataConnection) ? \"red\" :\"green\"}>{this.state.pinataConnection} </font></h1> \n                 </div>\n            <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n            <img height=\"250\" width=\"250\" src={this.state.image} />\n            </div>\n\n            <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n            <input type=\"file\" name=\"myImage\" onChange={this.onImageChange} />\n            </div>\n\n            <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n              }}>\n            <button type=\"submit\" name=\"btn\"  value = \"Sniper\" className=\"btn btn-primary btn-block btn-lg\" style={{ maxWidth: '325px', justifyContent:'center'}}> Mint Your Image</button>\n            \n            </div>\n            </form>\n          );\n        }\n      }\n      \n      export default NFTForm;\n  "]},"metadata":{},"sourceType":"module"}