{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/Documents/Work/SIBM-Test/src/components/Navbar.js\";\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport FlipCountdown from '@rumess/react-flip-countdown';\nimport './App.css'; //import { useEthers, useEtherBalance } from \"@usedapp/core\";\n//var QRCode = require('qrcode.react');\n\nvar Navbar = /*#__PURE__*/function (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      imgRef: 'idc',\n      account: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"changeImg\",\n    value: function changeImg() {\n      //this.setState({revealImg : !this.state.revealImg});\n      if (this.state.imgRef == \"idc\") {\n        this.setState(function (state) {\n          return {\n            imgRef: 'qr'\n          };\n        });\n      } else {\n        this.setState(function (state) {\n          return {\n            imgRef: 'idc'\n          };\n        });\n      }\n    }\n  }, {\n    key: \"loadAccount\",\n    value: function () {\n      var _loadAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var web3, bsChain, accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = window.web3;\n                bsChain = web3.eth;\n                _context.next = 4;\n                return bsChain.getAccounts();\n\n              case 4:\n                accounts = _context.sent;\n                //console.log(\"accounts :: \", accounts[0]);\n                this.setState({\n                  account: accounts[0]\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadAccount() {\n        return _loadAccount.apply(this, arguments);\n      }\n\n      return loadAccount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadAccount = this.loadAccount.bind(this);\n      this.loadAccount();\n      this.handleWallet = this.handleWallet.bind(this);\n      this.changeImg = this.changeImg.bind(this);\n    } // Arbitrage Finance Swap  \n    //TAG add back \n    // <button className=\"btn btn-primary btn-block centered\" style ={{width : '150px', height : '35px'}} type=\"button\" onClick = {this.props.connectWallet} >{this.props.connectionString}</button>\n\n  }, {\n    key: \"handleWallet\",\n    value: function () {\n      var _handleWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var st, web3, bsChain, accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                st = this.state.account;\n\n                if (!st) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                console.log(\"DIS\");\n                this.setState({\n                  account: 0\n                }); //await window.web3.eth.currentProvider.disconnect();\n\n                _context2.next = 13;\n                break;\n\n              case 6:\n                console.log(\"Con\");\n                web3 = window.web3;\n                bsChain = web3.eth;\n                _context2.next = 11;\n                return bsChain.getAccounts();\n\n              case 11:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleWallet() {\n        return _handleWallet.apply(this, arguments);\n      }\n\n      return handleWallet;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-primary flex-md-nowrap p-0 shadow\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault(); //let ethAmount\n          //ethAmount = this.input.value.toString()\n          //ethAmount = window.web3.utils.toWei(ethAmount, 'Ether')\n\n          var address = _this2.state.toAddress;\n          var result = window.web3.utils.isAddress(address);\n          window.confirm(\"Connecting wallet - \", address);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.etherscan.io\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, \"SIBM Lottery AirDrop\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"right\",\n          alignItems: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FlipCountdown, {\n        hideYear: true,\n        hideMonth: true,\n        dayTitle: \"Days\",\n        hourTitle: \"Hours\",\n        minuteTitle: \"Minutes\",\n        secondTitle: \"Seconds\",\n        theme: \"dark\",\n        size: \"small\" // Options (Default: medium): large, medium, small, extra-small.\n        ,\n        endAt: '2022-2-18 12:00:00' // Date/Time\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"connect-wallet\",\n        onClick: this.handleWallet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, !this.state.account ? 'Connect Wallet' : this.state.account))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default Navbar; //<button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Connect Wallet </button>\n//style ={{float : 'left',width : '65px', height : '28px'}}","map":{"version":3,"sources":["/Users/andrew/Documents/Work/SIBM-Test/src/components/Navbar.js"],"names":["React","Component","Identicon","FlipCountdown","Navbar","props","state","imgRef","account","setState","web3","window","bsChain","eth","getAccounts","accounts","loadAccount","bind","handleWallet","changeImg","st","console","log","event","preventDefault","address","toAddress","result","utils","isAddress","confirm","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Identicon from 'identicon.js';\nimport FlipCountdown from '@rumess/react-flip-countdown';\nimport './App.css'\n//import { useEthers, useEtherBalance } from \"@usedapp/core\";\n\n//var QRCode = require('qrcode.react');\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      imgRef : 'idc',\n      account : \"\"\n    }\n    \n  }\n  changeImg(){\n    //this.setState({revealImg : !this.state.revealImg});\n    if (this.state.imgRef == \"idc\")\n      {\n      this.setState(state => ({\n      imgRef: 'qr'\n      }));\n      }\n    else\n      {\n      this.setState(state => ({\n      imgRef: 'idc'\n      }));\n      }\n  }\n  async loadAccount(){\n    const web3 = window.web3\n    const bsChain = web3.eth\n    const accounts = await bsChain.getAccounts()\n    //console.log(\"accounts :: \", accounts[0]);\n    this.setState({account : accounts[0]});\n  }\n  componentDidMount() {\n    this.loadAccount = this.loadAccount.bind(this);\n    this.loadAccount();\n    this.handleWallet = this.handleWallet.bind(this);\n    this.changeImg = this.changeImg.bind(this);\n  }\n\n  // Arbitrage Finance Swap  \n//TAG add back \n// <button className=\"btn btn-primary btn-block centered\" style ={{width : '150px', height : '35px'}} type=\"button\" onClick = {this.props.connectWallet} >{this.props.connectionString}</button>\nasync handleWallet(){\n  let st = this.state.account\n  if (st)\n    {\n    console.log(\"DIS\");\n    this.setState({account : 0});\n    //await window.web3.eth.currentProvider.disconnect();\n    }\n  else \n    {\n    console.log(\"Con\");\n    const web3 = window.web3\n    const bsChain = web3.eth\n    const accounts = await bsChain.getAccounts()\n    this.setState({account : accounts[0]});\n    }  \n}\n\nrender() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-primary flex-md-nowrap p-0 shadow\" onSubmit={(event) => {\n        event.preventDefault()\n        //let ethAmount\n        //ethAmount = this.input.value.toString()\n        //ethAmount = window.web3.utils.toWei(ethAmount, 'Ether')\n        const address = this.state.toAddress;\n        let result = window.web3.utils.isAddress(address)\n        window.confirm(\"Connecting wallet - \", address);\n      }}>\n\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"http://www.etherscan.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n         SIBM Lottery AirDrop         \n        </a>\n        <div style={{\n                  display: \"flex\",\n                  justifyContent: \"right\",\n                  alignItems: \"right\"\n                }}>\n          <FlipCountdown\n                hideYear\n                hideMonth\n                dayTitle='Days'\n                hourTitle='Hours'\n                minuteTitle='Minutes'\n                secondTitle='Seconds'\n                theme = 'dark'\n                size='small' // Options (Default: medium): large, medium, small, extra-small.\n                endAt={'2022-2-18 12:00:00'} // Date/Time\n            />\n\n        </div>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            { /*this.state.account\n              ? ((this.state.imgRef == \"idc\") ? <img\n              onClick = {this.changeImg}   \n              className=\"ml-2\"\n                width='55'\n                height='55'\n                src= {`data:image/png;base64,${new Identicon(this.state.account, 30).toString()}`}\n                alt=\"\"\n              /> : <QRCode   onClick = {this.changeImg} size = {40} value= {this.state.account}  /> )\n              : <span></span>*/\n            }\n        <button id = \"connect-wallet\" onClick = {this.handleWallet} >{ !this.state.account? 'Connect Wallet' : this.state.account }</button>\n          </li>\n        </ul>\n        \n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n//<button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Connect Wallet </button>\n//style ={{float : 'left',width : '65px', height : '28px'}}"]},"metadata":{},"sourceType":"module"}