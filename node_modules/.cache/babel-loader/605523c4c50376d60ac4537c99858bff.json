{"ast":null,"code":"var querystring = require('querystring');\n\nmodule.exports = function (getRequest, apiKey) {\n  return {\n    /**\n     * Returns the number of most recent block\n     * @example\n     * var block = api.proxy.eth_blockNumber();\n     * @returns {Promise.<integer>}\n     */\n    eth_blockNumber: function eth_blockNumber() {\n      var module = 'proxy';\n      var action = 'eth_blockNumber';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns information about a block by block number.\n     * @param {string} tag - Tag to look up\n     * @example\n     * var blockNumber = api.proxy.eth_getBlockByNumber('0x10d4f');\n     * @returns {Promise.<integer>}\n     */\n    eth_getBlockByNumber: function eth_getBlockByNumber(tag) {\n      var module = 'proxy';\n      var action = 'eth_getBlockByNumber';\n      var boolean = true;\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        tag: tag,\n        apiKey: apiKey,\n        boolean: boolean\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns information about a uncle by block number.\n     * @param {string} tag - Tag to look up\n     * @param {string} index - Index\n     * @example\n     * var res = api.proxy.eth_getUncleByBlockNumberAndIndex('0x210A9B', '0x0');\n     * @returns {Promise.<object>}\n     */\n    eth_getUncleByBlockNumberAndIndex: function eth_getUncleByBlockNumberAndIndex(tag, index) {\n      var module = 'proxy';\n      var action = 'eth_getUncleByBlockNumberAndIndex';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        tag: tag,\n        index: index\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number\n     * @param {string} tag - Tag to look up\n     * @example\n     * var res = api.proxy.eth_getBlockTransactionCountByNumber('0x10FB78');\n     * @returns {Promise.<object>}\n     */\n    eth_getBlockTransactionCountByNumber: function eth_getBlockTransactionCountByNumber(tag) {\n      var module = 'proxy';\n      var action = 'eth_getBlockTransactionCountByNumber';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        tag: tag\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the information about a transaction requested by transaction hash\n     * @param {string} hash - Transaction hash\n     * @example\n     * var res = api.proxy.eth_getTransactionByHash('0x1e2910a262b1008d0616a0beb24c1a491d78771baa54a33e66065e03b1f46bc1');\n     * @returns {Promise.<object>}\n     */\n    eth_getTransactionByHash: function eth_getTransactionByHash(txhash) {\n      var module = 'proxy';\n      var action = 'eth_getTransactionByHash';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        txhash: txhash\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns information about a transaction by block number and transaction index position\n     * @param {string} tag - Tag to look up\n     * @param {string} index - Index\n     * @example\n     * var res = api.proxy.eth_getTransactionByBlockNumberAndIndex('0x10d4f', '0x0');\n     * @returns {Promise.<object>}\n     */\n    eth_getTransactionByBlockNumberAndIndex: function eth_getTransactionByBlockNumberAndIndex(tag, index) {\n      var module = 'proxy';\n      var action = 'eth_getTransactionByBlockNumberAndIndex';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        tag: tag,\n        index: index\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the number of transactions sent from an address\n     * @param {string} address - Address of the transaction\n     * @example\n     * var res = api.proxy.eth_getTransactionCount('0x2910543af39aba0cd09dbb2d50200b3e800a63d2', 'latest');\n     * @returns {Promise.<object>}\n     */\n    eth_getTransactionCount: function eth_getTransactionCount(address) {\n      var module = 'proxy';\n      var action = 'eth_getTransactionCount';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        address: address\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions\n     * @param {string} hex - Serialized Message\n     * @example\n     * var res = api.proxy.eth_sendRawTransaction('0xf904808000831cfde080');\n     * @returns {Promise.<object>}\n     */\n    eth_sendRawTransaction: function eth_sendRawTransaction(hex) {\n      var module = 'proxy';\n      var action = 'eth_sendRawTransaction';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        hex: hex\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the receipt of a transaction by transaction hash\n     * @param {string} txhash - Transaction hash\n     * @example\n     * var ret = api.proxy.eth_getTransactionReceipt('0x1e2910a262b1008d0616a0beb24c1a491d78771baa54a33e66065e03b1f46bc1');\n     * @returns {Promise.<object>}\n     */\n    eth_getTransactionReceipt: function eth_getTransactionReceipt(txhash) {\n      var module = 'proxy';\n      var action = 'eth_getTransactionReceipt';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        txhash: txhash\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain\n     * @param {string} to - Address to execute from\n     * @param {string} data - Data to transfer\n     * @param {string} tag - A tag\n     * @example\n     * var res = api.proxy.eth_call('0xAEEF46DB4855E25702F8237E8f403FddcaF931C0', '0x70a08231000000000000000000000000e16359506c028e51f16be38986ec5746251e9724', 'latest');\n     * @returns {Promise.<object>}\n     */\n    eth_call: function eth_call(to, data, tag) {\n      var module = 'proxy';\n      var action = 'eth_call';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        to: to,\n        data: data,\n        tag: tag\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns code at a given address\n     * @param {string} address - Address to get code from\n     * @param {string} tag - ??\n     * @example\n     * var res = api.proxy.eth_getCode('0xf75e354c5edc8efed9b59ee9f67a80845ade7d0c',  'latest');\n     * @returns {Promise.<object>}\n     */\n    eth_getCode: function eth_getCode(address, tag) {\n      var module = 'proxy';\n      var action = 'eth_getCode';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        address: address,\n        tag: tag\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param {string} address - Address to get code from\n     * @param {string} position - Storage position\n     * @param {string} tag - ??\n     * @example\n     * var res = api.proxy.eth_getStorageAt('0x6e03d9cce9d60f3e9f2597e13cd4c54c55330cfd', '0x0',  'latest');\n     * @returns {Promise.<object>}\n     */\n    eth_getStorageAt: function eth_getStorageAt(address, position, tag) {\n      var module = 'proxy';\n      var action = 'eth_getStorageAt';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        address: address,\n        position: position,\n        tag: tag\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Returns the current price per gas in wei.\n     * var gasprice = api.proxy.eth_gasPrice();\n     * @returns {Promise.<object>}\n     */\n    eth_gasPrice: function eth_gasPrice() {\n      var module = 'proxy';\n      var action = 'eth_gasPrice';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey\n      });\n      return getRequest(query);\n    },\n\n    /**\n     * Makes a call or transaction, which won't be added to the blockchain and returns the used gas, which can be used for estimating the used gas\n     * @param {string} to - Address to get code from\n     * @param {string} value - Storage position\n     * @param {string} gasPrice - ??\n     * @param {string} gas - ??\n     * @xample\n     * var res = api.proxy.eth_estimateGas(\n     *  '0xf0160428a8552ac9bb7e050d90eeade4ddd52843',\n     *  '0xff22',\n     *  '0x051da038cc',\n     *  '0xffffff'\n     *);\n     * @returns {Promise.<object>}\n     */\n    eth_estimateGas: function eth_estimateGas(to, value, gasPrice, gas) {\n      var module = 'proxy';\n      var action = 'eth_estimateGas';\n      var query = querystring.stringify({\n        module: module,\n        action: action,\n        apiKey: apiKey,\n        to: to,\n        value: value,\n        gasPrice: gasPrice,\n        gas: gas\n      });\n      return getRequest(query);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}