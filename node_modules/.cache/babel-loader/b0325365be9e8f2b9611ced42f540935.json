{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrew/Documents/Work/SIBM-Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createContext, useContext } from 'react';\nimport { ChainId } from '../../constants';\nexport var NetworkContext = createContext({\n  network: {\n    provider: undefined,\n    chainId: ChainId.Mainnet,\n    accounts: [],\n    errors: []\n  },\n  update: function update() {\n    return undefined;\n  },\n  reportError: function reportError() {\n    return undefined;\n  },\n  activate: function () {\n    var _activate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", undefined);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function activate() {\n      return _activate.apply(this, arguments);\n    }\n\n    return activate;\n  }(),\n  deactivate: function deactivate() {\n    return undefined;\n  }\n});\nexport function useNetwork() {\n  return useContext(NetworkContext);\n}","map":null,"metadata":{},"sourceType":"module"}