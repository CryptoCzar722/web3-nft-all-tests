{"ast":null,"code":"var axios = require('axios');\n/**\n * @param {string} chain\n * @returns {string}\n */\n\n\nfunction pickChainUrl(chain) {\n  if (!chain || !TESTNET_API_URL_MAP[chain]) {\n    return MAIN_API_URL;\n  }\n\n  return TESTNET_API_URL_MAP[chain];\n}\n\nvar MAIN_API_URL = 'https://api.etherscan.io';\nvar TESTNET_API_URL_MAP = {\n  ropsten: 'https://api-ropsten.etherscan.io',\n  kovan: 'https://api-kovan.etherscan.io',\n  rinkeby: 'https://api-rinkeby.etherscan.io',\n  homestead: 'https://api.etherscan.io'\n};\n\nmodule.exports = function (chain, timeout) {\n  var client = axios.create({\n    baseURL: pickChainUrl(chain),\n    timeout: timeout\n  });\n  /**\n   * @param query\n   * @returns {Promise<any>}\n   */\n\n  function getRequest(query) {\n    return new Promise(function (resolve, reject) {\n      client.get('/api?' + query).then(function (response) {\n        var data = response.data;\n\n        if (data.status && data.status != 1) {\n          var returnMessage = data.message || 'NOTOK';\n\n          if (data.result && typeof data.result === 'string') {\n            returnMessage = data.result;\n          } else if (data.message && typeof data.message === 'string') {\n            returnMessage = data.message;\n          }\n\n          return reject(returnMessage);\n        }\n\n        if (data.error) {\n          var message = data.error;\n\n          if (typeof data.error === 'object' && data.error.message) {\n            message = data.error.message;\n          }\n\n          return reject(new Error(message));\n        }\n\n        resolve(data);\n      }).catch(function (error) {\n        return reject(new Error(error));\n      });\n    });\n  }\n\n  return getRequest;\n};","map":null,"metadata":{},"sourceType":"script"}